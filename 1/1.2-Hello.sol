// SPDX-License-Identifier: MIT

pragma solidity 0.8.15;
//pragma solidity >= 0.6.0;
//pragma solidity >= 0.6.0 <=0.8.10;

contract Hello {

    /// 1- State Variables - متغیرهای حالت  ///
    // متغیرهای حالت روی بلاکچین ذخیره می شوند
    // تعداد و اندازه این متغیرها روی هزینه گس دپلوی کانترکت تاثیر مستقیم دارد
    string public helloStr;

    /// 2- Functions - توابع  ///

    // Constructor - سازنده
    constructor() {
        // دستورات خاصی که فقط یک بار در مرحله دپلوی کانترکت باید اجرا شوند
        // مثل گرفتن آدرس مالک یا همان دپلوی کننده کانترکت
        // یا مثل تعین تعداد اولیه توکن

        // مقدادهی اولیه متغیرها
        helloStr = "Hello World!";
    }

    // فانکن های دیگر
    // user-defined functions
}


contract myContract {

}


// انواع لایسنس
// https://spdx.org/licenses/


// مستندات آموزش سالیدیت
// https://docs.soliditylang.org/


// انواع کامنت در سالیدیتی

// کامنت تک خطی

/* 
    کامنت چند خطی
    خط 1
    خط 2
    ...
*/


/*
    Access Modifier - سطح دسترسی
        public : از داخل و خارج اسمارت کانترکت قابل مشاهده است
        private : دسترسی فقط از داخل خود کانترکت
        internal : دسترسی از خود کانترکت و کانترکت های فرزند
        external : این فانکشن فقط از بیرون کانترکت قابل استفاده است - فقط برای فانکشن ها
*/


/*
    مراحل توسعه یک اسمارت کانترکت

        1- نوشتن کد سالیدیتی کانترکت
        2- کامپایل
        3- دپلوی
*/


/*
    خروجی کامپایل یک کانترکت
        ByteCode
        ABI

    خروجی دپلوی یک کانترکت
        Address
*/
